{"version":3,"sources":["serviceWorker.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","BG_PRIMARY","Action","Type","Iddle","AddExpense","AddIncome","formatMoney","amount","accounting","formatNumber","precision","thousand","decimal","parseMoney","amountString","unformat","SingleInput","props","label","readOnly","value","onChange","className","onClick","react_default","a","createElement","InputGroup","Prepend","Text","concat","Form","Control","inputMode","DualInput","placeholder","onChangeValue","onChangeLabel","ExpenseList","expenses","onSelectItem","Object","keys","length","Fragment","map","key","IncomeList","incomes","NewEntry","onSave","onCancel","_useState","useState","_useState2","slicedToArray","setLabel","_useState3","_useState4","setValue","e","target","ButtonGroup","Button","variant","style","backgroundColor","react_icons_kit","icon","check","back","Remaining","remaining","Card","Footer","App","_useState5","_useState6","action","setAction","_useState7","_useState8","budget","setBudget","_useState9","_useState10","setExpenses","_useState11","_useState12","setIncomes","sumReducer","sum","item","closeNewEntry","openExpenseNewEntry","openIncomeNewEntry","handleAddIncome","_ref","_ref2","trim","objectSpread","defineProperty","setIncomeItem","handleAddExpense","_ref3","_ref4","setExpenseItem","Header","color","Body","filter","_key","reduce","result","case","withPlus","withMinus","totalExpense","values","totalIncome","calculateRemaining","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8LAYMA,eAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,gHCzF3DC,EAAa,UAEbC,QAASC,GAAK,CAClBC,MAAO,GACPC,WAAY,GACZC,UAAW,KAGb,SAASC,EAAYC,GAInB,OAAOC,IAAWC,aAAaF,EAAQ,CACrCG,UAJgB,EAKhBC,SAHe,IAIfC,QALc,MASlB,SAASC,EAAWC,GAElB,OAAON,IAAWO,SAASD,EADX,KAIlB,SAASE,EAAYC,GAAO,IAClBC,EAAyDD,EAAzDC,MAAOC,EAAkDF,EAAlDE,SAAUC,EAAwCH,EAAxCG,MAAOC,EAAiCJ,EAAjCI,SAAUC,EAAuBL,EAAvBK,UAAWC,EAAYN,EAAZM,QACrD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYJ,QAASA,GACnBC,EAAAC,EAAAC,cAACC,EAAA,EAAWC,QAAZ,KACEJ,EAAAC,EAAAC,cAACC,EAAA,EAAWE,KAAZ,CACEP,UAAS,sDAAAQ,OACPX,EAAW,GAAK,WADT,KAAAW,OAELR,GAAwB,KAE3BJ,IAGLM,EAAAC,EAAAC,cAACK,EAAA,EAAKC,QAAN,CACEC,UAAU,SACVb,MAAOA,EACPC,SAAUA,EACVF,SAAUA,EACVG,UAAS,kDAAAQ,OACPR,GAAwB,OAOlC,SAASY,EAAUjB,GAAO,IAEtBkB,EAMElB,EANFkB,YACAjB,EAKED,EALFC,MACAC,EAIEF,EAJFE,SACAC,EAGEH,EAHFG,MACAgB,EAEEnB,EAFFmB,cACAC,EACEpB,EADFoB,cAEF,OACEb,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACK,EAAA,EAAKC,QAAN,CACEZ,MAAOF,EACPG,SAAUgB,EACVlB,SAAUA,EACVG,UAAU,qDACVa,YAAaA,IAEfX,EAAAC,EAAAC,cAACK,EAAA,EAAKC,QAAN,CACEC,UAAU,SACVb,MAAOA,EACPC,SAAUe,EACVjB,SAAUA,EACVG,UAAU,oDAMlB,SAASgB,EAAYrB,GAAO,IAClBsB,EAA2BtB,EAA3BsB,SAAUC,EAAiBvB,EAAjBuB,aAClB,OAAIC,OAAOC,KAAKH,GAAUI,QAAU,EAC3B,KAGPnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACGH,OAAOC,KAAKH,GAAUM,IAAI,SAAAC,GAAG,OAC5BtB,EAAAC,EAAAC,cAACV,EAAD,CACE8B,IAAKA,EACL5B,MAAO4B,EACP1B,MAAOd,EAAYiC,EAASO,IAC5B3B,UAAQ,EACRG,UAAU,cACVC,QAAS,kBAAMiB,EAAaM,SAOtC,SAASC,EAAW9B,GAAO,IACjB+B,EAA0B/B,EAA1B+B,QAASR,EAAiBvB,EAAjBuB,aACjB,OAAIC,OAAOC,KAAKM,GAASL,QAAU,EAC1B,KAGPnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACGH,OAAOC,KAAKM,GAASH,IAAI,SAAAC,GAAG,OAC3BtB,EAAAC,EAAAC,cAACV,EAAD,CACE8B,IAAKA,EACL5B,MAAO4B,EACP1B,MAAOd,EAAY0C,EAAQF,IAC3B3B,UAAQ,EACRG,UAAU,eACVC,QAAS,kBAAMiB,EAAaM,SAOtC,SAASG,EAAShC,GAAO,IACfkB,EAAkClB,EAAlCkB,YAAae,EAAqBjC,EAArBiC,OAAQC,EAAalC,EAAbkC,SADNC,EAEGC,mBAAS,IAFZC,EAAAb,OAAAc,EAAA,EAAAd,CAAAW,EAAA,GAEhBlC,EAFgBoC,EAAA,GAETE,EAFSF,EAAA,GAAAG,EAGGJ,mBAAS,IAHZK,EAAAjB,OAAAc,EAAA,EAAAd,CAAAgB,EAAA,GAGhBrC,EAHgBsC,EAAA,GAGTC,EAHSD,EAAA,GASvB,OACElC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACEpB,EAAAC,EAAAC,cAACQ,EAAD,CACEC,YAAaA,EACbjB,MAAOA,EACPE,MAAOd,EAAYc,GACnBgB,cAAe,SAAAwB,GAAC,OAAID,EAAS9C,EAAW+C,EAAEC,OAAOzC,SACjDiB,cAAe,SAAAuB,GAAC,OAAIJ,EAASI,EAAEC,OAAOzC,UAExCI,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAaxC,UAAU,UACrBE,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACExC,QAfW,WACjB2B,EAAO,CAAChC,EAAOE,KAeT4C,QAAQ,QACR1C,UAAU,YACV2C,MAAO,CAAEC,gBAAiBlE,IAE1BwB,EAAAC,EAAAC,cAACyC,EAAA,KAAD,CAAMC,KAAMC,QAAO/C,UAAU,gBAE/BE,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAQxC,QAAS4B,EAAUa,QAAQ,SACjCxC,EAAAC,EAAAC,cAACyC,EAAA,KAAD,CAAMC,KAAME,YAOtB,SAASC,EAAUtD,GAAO,IAChBuD,EAAcvD,EAAduD,UAER,OADA9E,QAAQC,IAAI6E,GACRA,EAAY,EAEZhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAKC,OAAN,CAAapD,UAAU,8BACrBE,EAAAC,EAAAC,cAACV,EAAD,CACEI,MAAOd,EAAYkE,GACnBrD,UAAQ,EACRD,MAAM,OACNI,UAAU,kBAKdkD,EAAY,EAEZhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAKC,OAAN,CAAapD,UAAU,8BACrBE,EAAAC,EAAAC,cAACV,EAAD,CACEI,MAAOd,EAAYkE,GACnBrD,UAAQ,EACRD,MAAM,SACNI,UAAU,iBAKA,IAAdkD,EAEAhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAKC,OAAN,CAAapD,UAAU,8BACrBE,EAAAC,EAAAC,cAACV,EAAD,CACEI,MAAM,GACND,UAAQ,EACRD,MAAM,mBACNI,UAAU,eAMX,KAuIMqD,MApIf,WAAe,IAAAC,EACevB,mBAASpD,EAAOE,OAD/B0E,EAAApC,OAAAc,EAAA,EAAAd,CAAAmC,EAAA,GACNE,EADMD,EAAA,GACEE,EADFF,EAAA,GAAAG,EAEe3B,mBAAS,IAFxB4B,EAAAxC,OAAAc,EAAA,EAAAd,CAAAuC,EAAA,GAENE,EAFMD,EAAA,GAEEE,EAFFF,EAAA,GAAAG,EAGmB/B,mBAAS,IAH5BgC,EAAA5C,OAAAc,EAAA,EAAAd,CAAA2C,EAAA,GAGN7C,EAHM8C,EAAA,GAGIC,EAHJD,EAAA,GAAAE,EAIiBlC,mBAAS,IAJ1BmC,EAAA/C,OAAAc,EAAA,EAAAd,CAAA8C,EAAA,GAINvC,EAJMwC,EAAA,GAIGC,EAJHD,EAAA,GAMPE,EAAa,SAACC,EAAKC,GAAN,OAAeD,EAAMC,GAmClCC,EAAgB,WACpBd,EAAU9E,EAAOE,QAGb2F,EAAsB,WAC1Bf,EAAU9E,EAAOG,aAGb2F,EAAqB,WACzBhB,EAAU9E,EAAOI,YAGb2F,EAAkB,SAAAC,GAAkB,IAAAC,EAAAzD,OAAAc,EAAA,EAAAd,CAAAwD,EAAA,GAAhBnD,EAAgBoD,EAAA,GAAX9E,EAAW8E,EAAA,GACrB,KAAfpD,EAAIqD,QAA2B,KAAV/E,IAjCL,SAAC0B,EAAK1B,GAC1BqE,EAAWhD,OAAA2D,EAAA,EAAA3D,CAAA,GACNO,EADKP,OAAA4D,EAAA,EAAA5D,CAAA,GAEPK,EAAME,EAAQF,GAAOE,EAAQF,GAAO1B,EAAQA,KAiC/CkF,CAAcxD,EAAK1B,GACnB2D,EAAU9E,EAAOE,SAGboG,EAAmB,SAAAC,GAAkB,IAAAC,EAAAhE,OAAAc,EAAA,EAAAd,CAAA+D,EAAA,GAAhB1D,EAAgB2D,EAAA,GAAXrF,EAAWqF,EAAA,GACtB,KAAf3D,EAAIqD,QAA2B,KAAV/E,IA/CJ,SAAC0B,EAAK1B,GAC3BkE,EAAY7C,OAAA2D,EAAA,EAAA3D,CAAA,GACPF,EADME,OAAA4D,EAAA,EAAA5D,CAAA,GAERK,EAAMP,EAASO,GAAOP,EAASO,GAAO1B,EAAQA,KA+CjDsF,CAAe5D,EAAK1B,GACpB2D,EAAU9E,EAAOE,SAGnB,OACEqB,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAMnD,UAAU,6DACdE,EAAAC,EAAAC,cAAC+C,EAAA,EAAKkC,OAAN,CACErF,UAAU,yCACV2C,MAAO,CAAEC,gBAAiBlE,EAAY4G,MAAO,UAF/C,WAMApF,EAAAC,EAAAC,cAAC+C,EAAA,EAAKoC,KAAN,CAAWvF,UAAU,OACnBE,EAAAC,EAAAC,cAACV,EAAD,CACEE,MAAM,QACNE,MAAOd,EAAY4E,GACnB7D,SAAU,SAAAuC,GAAC,OAAIuB,EAAUtE,EAAW+C,EAAEC,OAAOzC,SAC7CE,UAAU,cAEX4D,EACC1D,EAAAC,EAAAC,cAACqB,EAAD,CAAYP,aAnDK,SAACM,GAAD,OACvB2C,EACEhD,OAAOC,KAAKM,GACT8D,OAAO,SAAAC,GAAI,OAAIA,IAASjE,IACxBkE,OAAO,SAACC,EAAQnE,GAAT,OAAAL,OAAA2D,EAAA,EAAA3D,CAAA,GAAuBwE,EAAvBxE,OAAA4D,EAAA,EAAA5D,CAAA,GAAgCK,EAAME,EAAQF,MAAS,MA+CjBE,QAASA,IACnD,KACHkC,EACC1D,EAAAC,EAAAC,cAACY,EAAD,CAAaE,aA7DK,SAACM,GAAD,OACxBwC,EACE7C,OAAOC,KAAKH,GACTuE,OAAO,SAAAC,GAAI,OAAIA,IAASjE,IACxBkE,OAAO,SAACC,EAAQnE,GAAT,OAAAL,OAAA2D,EAAA,EAAA3D,CAAA,GAAuBwE,EAAvBxE,OAAA4D,EAAA,EAAA5D,CAAA,GAAgCK,EAAMP,EAASO,MAAS,MAyDhBP,SAAUA,IACtD,KACH2C,EACGjF,EAAOiH,KAAK,CACV/G,MAAO,kBACLqB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAaxC,UAAU,UACrBE,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACExC,QAASwE,EACT/B,QAAQ,QACR1C,UAAU,aAEVE,EAAAC,EAAAC,cAACyC,EAAA,KAAD,CAAMC,KAAM+C,WAAU7F,UAAU,kBAElCE,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACExC,QAASuE,EACT9B,QAAQ,QACR1C,UAAU,aAEVE,EAAAC,EAAAC,cAACyC,EAAA,KAAD,CAAMC,KAAMgD,YAAW9F,UAAU,mBAIvClB,WAAY,kBACVoB,EAAAC,EAAAC,cAACuB,EAAD,CACEd,YAAY,gBACZe,OAAQqD,EACRpD,SAAU0C,KAGdxF,UAAW,kBACTmB,EAAAC,EAAAC,cAACuB,EAAD,CACEd,YAAY,mBACZe,OAAQ8C,EACR7C,SAAU0C,MA9BhB5F,CAiCG6E,GACH,MAELI,EAAS1D,EAAAC,EAAAC,cAAC6C,EAAD,CAAWC,UAvHE,WACzB,IAAM6C,EAAe5E,OAAO6E,OAAO/E,GAAUyE,OAAOtB,EAAY,GAC1D6B,EAAc9E,OAAO6E,OAAOtE,GAASgE,OAAOtB,EAAY,GAE9D,OADuBR,EAASqC,EAAcF,EAoHZG,KAA2B,OCrUjEC,IAASC,OAAOlG,EAAAC,EAAAC,cAACiG,EAAD,MAASC,SAASC,eAAe,SFc1C,SAAkB/I,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+I,IAAIC,WAAwBvJ,OAAOC,SAASuJ,MACpDC,SAAWzJ,OAAOC,SAASwJ,OAIvC,OAGFzJ,OAAO0J,iBAAiB,OAAQ,WAC9B,IAAMrJ,EAAK,GAAAiD,OAAMiG,WAAN,sBAEPzJ,GAgEV,SAAiCO,EAAOC,GAEtCqJ,MAAMtJ,GACHK,KAAK,SAAAkJ,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C1J,UAAUC,cAAc0J,MAAMxJ,KAAK,SAAAC,GACjCA,EAAawJ,aAAazJ,KAAK,WAC7BV,OAAOC,SAASmK,aAKpBhK,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFAkJ,CAAwBhK,EAAOC,GAI/BC,UAAUC,cAAc0J,MAAMxJ,KAAK,WACjCQ,QAAQC,IACN,gHAMJf,EAAgBC,EAAOC,MErC/BE","file":"static/js/main.c08b1e70.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport { Card, Form, InputGroup, ButtonGroup, Button } from 'react-bootstrap'\nimport { Icon } from 'react-icons-kit'\nimport { back, check, withPlus, withMinus } from 'react-icons-kit/entypo'\nimport accounting from 'accounting'\nimport Type from 'union-type'\n\nconst BG_PRIMARY = '#563d7c'\n\nconst Action = Type({\n  Iddle: [],\n  AddExpense: [],\n  AddIncome: []\n})\n\nfunction formatMoney(amount) {\n  const precision = 0\n  const decimal = ','\n  const thousand = '.'\n  return accounting.formatNumber(amount, {\n    precision,\n    thousand,\n    decimal\n  })\n}\n\nfunction parseMoney(amountString) {\n  const decimal = ','\n  return accounting.unformat(amountString, decimal)\n}\n\nfunction SingleInput(props) {\n  const { label, readOnly, value, onChange, className, onClick } = props\n  return (\n    <InputGroup onClick={onClick}>\n      <InputGroup.Prepend>\n        <InputGroup.Text\n          className={`border-0 rounded-0 font-weight-bold text-uppercase ${\n            readOnly ? '' : 'bg-white'\n          } ${className ? className : ''}`}\n        >\n          {label}\n        </InputGroup.Text>\n      </InputGroup.Prepend>\n      <Form.Control\n        inputMode=\"number\"\n        value={value}\n        onChange={onChange}\n        readOnly={readOnly}\n        className={`border-0 rounded-0 text-right font-weight-bold ${\n          className ? className : ''\n        }`}\n      />\n    </InputGroup>\n  )\n}\n\nfunction DualInput(props) {\n  const {\n    placeholder,\n    label,\n    readOnly,\n    value,\n    onChangeValue,\n    onChangeLabel\n  } = props\n  return (\n    <InputGroup>\n      <Form.Control\n        value={label}\n        onChange={onChangeLabel}\n        readOnly={readOnly}\n        className=\"border-0 rounded-0 font-weight-bold text-uppercase\"\n        placeholder={placeholder}\n      />\n      <Form.Control\n        inputMode=\"number\"\n        value={value}\n        onChange={onChangeValue}\n        readOnly={readOnly}\n        className=\"border-0 rounded-0 text-right font-weight-bold\"\n      />\n    </InputGroup>\n  )\n}\n\nfunction ExpenseList(props) {\n  const { expenses, onSelectItem } = props\n  if (Object.keys(expenses).length <= 0) {\n    return null\n  }\n  return (\n    <>\n      {Object.keys(expenses).map(key => (\n        <SingleInput\n          key={key}\n          label={key}\n          value={formatMoney(expenses[key])}\n          readOnly\n          className=\"text-danger\"\n          onClick={() => onSelectItem(key)}\n        />\n      ))}\n    </>\n  )\n}\n\nfunction IncomeList(props) {\n  const { incomes, onSelectItem } = props\n  if (Object.keys(incomes).length <= 0) {\n    return null\n  }\n  return (\n    <>\n      {Object.keys(incomes).map(key => (\n        <SingleInput\n          key={key}\n          label={key}\n          value={formatMoney(incomes[key])}\n          readOnly\n          className=\"text-success\"\n          onClick={() => onSelectItem(key)}\n        />\n      ))}\n    </>\n  )\n}\n\nfunction NewEntry(props) {\n  const { placeholder, onSave, onCancel } = props\n  const [label, setLabel] = useState('')\n  const [value, setValue] = useState('')\n\n  const handleSave = () => {\n    onSave([label, value])\n  }\n\n  return (\n    <>\n      <DualInput\n        placeholder={placeholder}\n        label={label}\n        value={formatMoney(value)}\n        onChangeValue={e => setValue(parseMoney(e.target.value))}\n        onChangeLabel={e => setLabel(e.target.value)}\n      />\n      <ButtonGroup className=\"d-flex\">\n        <Button\n          onClick={handleSave}\n          variant=\"light\"\n          className=\"rounded-0\"\n          style={{ backgroundColor: BG_PRIMARY }}\n        >\n          <Icon icon={check} className=\"text-white\" />\n        </Button>\n        <Button onClick={onCancel} variant=\"light\">\n          <Icon icon={back} />\n        </Button>\n      </ButtonGroup>\n    </>\n  )\n}\n\nfunction Remaining(props) {\n  const { remaining } = props\n  console.log(remaining)\n  if (remaining > 0) {\n    return (\n      <Card.Footer className=\"fixed-bottom rounded-0 p-0\">\n        <SingleInput\n          value={formatMoney(remaining)}\n          readOnly\n          label=\"SISA\"\n          className=\"text-success\"\n        />\n      </Card.Footer>\n    )\n  }\n  if (remaining < 0) {\n    return (\n      <Card.Footer className=\"fixed-bottom rounded-0 p-0\">\n        <SingleInput\n          value={formatMoney(remaining)}\n          readOnly\n          label=\"KURANG\"\n          className=\"text-danger\"\n        />\n      </Card.Footer>\n    )\n  }\n  if (remaining === 0) {\n    return (\n      <Card.Footer className=\"fixed-bottom rounded-0 p-0\">\n        <SingleInput\n          value=\"\"\n          readOnly\n          label=\"SEMUA TERALOKASI\"\n          className=\"text-info\"\n        />\n      </Card.Footer>\n    )\n  }\n\n  return null\n}\n\nfunction App() {\n  const [action, setAction] = useState(Action.Iddle)\n  const [budget, setBudget] = useState('')\n  const [expenses, setExpenses] = useState({})\n  const [incomes, setIncomes] = useState({})\n\n  const sumReducer = (sum, item) => sum + item\n\n  const calculateRemaining = () => {\n    const totalExpense = Object.values(expenses).reduce(sumReducer, 0)\n    const totalIncome = Object.values(incomes).reduce(sumReducer, 0)\n    const totalRemaining = budget + totalIncome - totalExpense\n    return totalRemaining\n  }\n\n  const setExpenseItem = (key, value) =>\n    setExpenses({\n      ...expenses,\n      [key]: expenses[key] ? expenses[key] + value : value\n    })\n\n  const setIncomeItem = (key, value) =>\n    setIncomes({\n      ...incomes,\n      [key]: incomes[key] ? incomes[key] + value : value\n    })\n\n  const removeExpenseItem = (key) =>\n    setExpenses(\n      Object.keys(expenses)\n        .filter(_key => _key !== key)\n        .reduce((result, key) => ({ ...result, [key]: expenses[key] }), {})\n    )\n\n  const removeIncomeItem = (key) =>\n    setIncomes(\n      Object.keys(incomes)\n        .filter(_key => _key !== key)\n        .reduce((result, key) => ({ ...result, [key]: incomes[key] }), {})\n    )\n\n  const closeNewEntry = () => {\n    setAction(Action.Iddle)\n  }\n\n  const openExpenseNewEntry = () => {\n    setAction(Action.AddExpense)\n  }\n\n  const openIncomeNewEntry = () => {\n    setAction(Action.AddIncome)\n  }\n\n  const handleAddIncome = ([key, value]) => {\n    if (key.trim() === '' || value === '') {\n      return\n    }\n    setIncomeItem(key, value)\n    setAction(Action.Iddle)\n  }\n\n  const handleAddExpense = ([key, value]) => {\n    if (key.trim() === '' || value === '') {\n      return\n    }\n    setExpenseItem(key, value)\n    setAction(Action.Iddle)\n  }\n\n  return (\n    <Card className=\"border-top-0 border-left-0 border-right-0 border-bottom-0\">\n      <Card.Header\n        className=\"rounded-0 text-center font-weight-bold\"\n        style={{ backgroundColor: BG_PRIMARY, color: 'white' }}\n      >\n        ALOKASI\n      </Card.Header>\n      <Card.Body className=\"p-0\">\n        <SingleInput\n          label=\"SALDO\"\n          value={formatMoney(budget)}\n          onChange={e => setBudget(parseMoney(e.target.value))}\n          className=\"text-info\"\n        />\n        {budget ? (\n          <IncomeList onSelectItem={removeIncomeItem} incomes={incomes} />\n        ) : null}\n        {budget ? (\n          <ExpenseList onSelectItem={removeExpenseItem} expenses={expenses} />\n        ) : null}\n        {budget\n          ? Action.case({\n              Iddle: () => (\n                <ButtonGroup className=\"d-flex\">\n                  <Button\n                    onClick={openIncomeNewEntry}\n                    variant=\"light\"\n                    className=\"rounded-0\"\n                  >\n                    <Icon icon={withPlus} className=\"text-success\" />\n                  </Button>\n                  <Button\n                    onClick={openExpenseNewEntry}\n                    variant=\"light\"\n                    className=\"rounded-0\"\n                  >\n                    <Icon icon={withMinus} className=\"text-danger\" />\n                  </Button>\n                </ButtonGroup>\n              ),\n              AddExpense: () => (\n                <NewEntry\n                  placeholder=\"NAMA ANGGARAN\"\n                  onSave={handleAddExpense}\n                  onCancel={closeNewEntry}\n                />\n              ),\n              AddIncome: () => (\n                <NewEntry\n                  placeholder=\"SUMBER PEMASUKAN\"\n                  onSave={handleAddIncome}\n                  onCancel={closeNewEntry}\n                />\n              )\n            })(action)\n          : null}\n      </Card.Body>\n      {budget ? <Remaining remaining={calculateRemaining()} /> : null}\n    </Card>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style.css'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}