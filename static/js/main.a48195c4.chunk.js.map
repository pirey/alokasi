{"version":3,"sources":["serviceWorker.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","BG_PRIMARY","Action","Type","Iddle","AddExpense","AddIncome","formatMoney","amount","accounting","formatNumber","precision","thousand","decimal","parseMoney","amountString","unformat","SingleInput","props","label","readOnly","value","onChange","className","react_default","a","createElement","InputGroup","Prepend","Text","concat","Form","Control","inputMode","DualInput","placeholder","onChangeValue","onChangeLabel","ExpenseList","expenses","Object","keys","length","Fragment","map","key","IncomeList","incomes","NewEntry","onSave","onCancel","_useState","useState","_useState2","slicedToArray","setLabel","_useState3","_useState4","setValue","e","target","ButtonGroup","Button","onClick","variant","style","backgroundColor","react_icons_kit","icon","check","back","Remaining","remaining","Card","Footer","App","_useState5","_useState6","action","setAction","_useState7","_useState8","budget","setBudget","_useState9","_useState10","setExpenses","_useState11","_useState12","setIncomes","sumReducer","sum","item","closeNewEntry","openExpenseNewEntry","openIncomeNewEntry","handleAddIncome","_ref","_ref2","trim","objectSpread","defineProperty","setIncomeItem","handleAddExpense","_ref3","_ref4","setExpenseItem","Header","color","Body","case","withPlus","withMinus","totalExpense","values","reduce","totalIncome","calculateRemaining","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a48195c4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport { Card, Form, InputGroup, ButtonGroup, Button } from 'react-bootstrap'\nimport { Icon } from 'react-icons-kit'\nimport { back, check, withPlus, withMinus } from 'react-icons-kit/entypo'\nimport accounting from 'accounting'\nimport Type from 'union-type'\n\nconst BG_PRIMARY = '#563d7c'\n\nconst Action = Type({\n  Iddle: [],\n  AddExpense: [],\n  AddIncome: []\n})\n\nfunction formatMoney(amount) {\n  const precision = 0\n  const decimal = ','\n  const thousand = '.'\n  return accounting.formatNumber(amount, {\n    precision,\n    thousand,\n    decimal\n  })\n}\n\nfunction parseMoney(amountString) {\n  const decimal = ','\n  return accounting.unformat(amountString, decimal)\n}\n\nfunction SingleInput(props) {\n  const { label, readOnly, value, onChange, className } = props\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n        <InputGroup.Text\n          className={`border-0 rounded-0 font-weight-bold text-uppercase ${\n            readOnly ? '' : 'bg-white'\n          } ${className ? className : ''}`}\n        >\n          {label}\n        </InputGroup.Text>\n      </InputGroup.Prepend>\n      <Form.Control\n        inputMode=\"number\"\n        value={value}\n        onChange={onChange}\n        readOnly={readOnly}\n        className={`border-0 rounded-0 text-right font-weight-bold ${\n          className ? className : ''\n        }`}\n      />\n    </InputGroup>\n  )\n}\n\nfunction DualInput(props) {\n  const {\n    placeholder,\n    label,\n    readOnly,\n    value,\n    onChangeValue,\n    onChangeLabel\n  } = props\n  return (\n    <InputGroup>\n      <Form.Control\n        value={label}\n        onChange={onChangeLabel}\n        readOnly={readOnly}\n        className=\"border-0 rounded-0 font-weight-bold text-uppercase\"\n        placeholder={placeholder}\n      />\n      <Form.Control\n        inputMode=\"number\"\n        value={value}\n        onChange={onChangeValue}\n        readOnly={readOnly}\n        className=\"border-0 rounded-0 text-right font-weight-bold\"\n      />\n    </InputGroup>\n  )\n}\n\nfunction ExpenseList(props) {\n  const { expenses } = props\n  if (Object.keys(expenses).length <= 0) {\n    return null\n  }\n  return (\n    <>\n      {Object.keys(expenses).map(key => (\n        <SingleInput\n          key={key}\n          label={key}\n          value={formatMoney(expenses[key])}\n          readOnly\n          className=\"text-danger\"\n        />\n      ))}\n    </>\n  )\n}\n\nfunction IncomeList(props) {\n  const { incomes } = props\n  if (Object.keys(incomes).length <= 0) {\n    return null\n  }\n  return (\n    <>\n      {Object.keys(incomes).map(key => (\n        <SingleInput\n          key={key}\n          label={key}\n          value={formatMoney(incomes[key])}\n          readOnly\n          className=\"text-success\"\n        />\n      ))}\n    </>\n  )\n}\n\nfunction NewEntry(props) {\n  const { placeholder, onSave, onCancel } = props\n  const [label, setLabel] = useState('')\n  const [value, setValue] = useState('')\n\n  const handleSave = () => {\n    onSave([label, value])\n  }\n\n  return (\n    <>\n      <DualInput\n        placeholder={placeholder}\n        label={label}\n        value={formatMoney(value)}\n        onChangeValue={e => setValue(parseMoney(e.target.value))}\n        onChangeLabel={e => setLabel(e.target.value)}\n      />\n      <ButtonGroup className=\"d-flex\">\n        <Button\n          onClick={handleSave}\n          variant=\"light\"\n          className=\"rounded-0\"\n          style={{ backgroundColor: BG_PRIMARY }}\n        >\n          <Icon icon={check} className=\"text-white\" />\n        </Button>\n        <Button onClick={onCancel} variant=\"light\">\n          <Icon icon={back} />\n        </Button>\n      </ButtonGroup>\n    </>\n  )\n}\n\nfunction Remaining(props) {\n  const { remaining } = props\n  console.log(remaining)\n  if (remaining > 0) {\n    return (\n      <Card.Footer className=\"fixed-bottom rounded-0 p-0\">\n        <SingleInput\n          value={formatMoney(remaining)}\n          readOnly\n          label=\"SISA\"\n          className=\"text-success\"\n        />\n      </Card.Footer>\n    )\n  }\n  if (remaining < 0) {\n    return (\n      <Card.Footer className=\"fixed-bottom rounded-0 p-0\">\n        <SingleInput\n          value={formatMoney(remaining)}\n          readOnly\n          label=\"KURANG\"\n          className=\"text-danger\"\n        />\n      </Card.Footer>\n    )\n  }\n  if (remaining === 0) {\n    return (\n      <Card.Footer className=\"fixed-bottom rounded-0 p-0\">\n        <SingleInput\n          value=\"\"\n          readOnly\n          label=\"SEMUA TERALOKASI\"\n          className=\"text-info\"\n        />\n      </Card.Footer>\n    )\n  }\n\n  return null\n}\n\nfunction App() {\n  const [action, setAction] = useState(Action.Iddle)\n  const [budget, setBudget] = useState('')\n  const [expenses, setExpenses] = useState({})\n  const [incomes, setIncomes] = useState({})\n\n  const sumReducer = (sum, item) => sum + item\n\n  const calculateRemaining = () => {\n    const totalExpense = Object.values(expenses).reduce(sumReducer, 0)\n    const totalIncome = Object.values(incomes).reduce(sumReducer, 0)\n    const totalRemaining = budget + totalIncome - totalExpense\n    return totalRemaining\n  }\n\n  const setExpenseItem = (key, value) =>\n    setExpenses({\n      ...expenses,\n      [key]: expenses[key] ? expenses[key] + value : value\n    })\n\n  const setIncomeItem = (key, value) =>\n    setIncomes({\n      ...incomes,\n      [key]: incomes[key] ? incomes[key] + value : value\n    })\n\n  const closeNewEntry = () => {\n    setAction(Action.Iddle)\n  }\n\n  const openExpenseNewEntry = () => {\n    setAction(Action.AddExpense)\n  }\n\n  const openIncomeNewEntry = () => {\n    setAction(Action.AddIncome)\n  }\n\n  const handleAddIncome = ([key, value]) => {\n    if (key.trim() === '' || value === '') {\n      return\n    }\n    setIncomeItem(key, value)\n    setAction(Action.Iddle)\n  }\n\n  const handleAddExpense = ([key, value]) => {\n    if (key.trim() === '' || value === '') {\n      return\n    }\n    setExpenseItem(key, value)\n    setAction(Action.Iddle)\n  }\n\n  return (\n    <Card className=\"border-top-0 border-left-0 border-right-0 border-bottom-0\">\n      <Card.Header\n        className=\"rounded-0 text-center font-weight-bold\"\n        style={{ backgroundColor: BG_PRIMARY, color: 'white' }}\n      >\n        ALOKASI\n      </Card.Header>\n      <Card.Body className=\"p-0\">\n        <SingleInput\n          label=\"SALDO\"\n          value={formatMoney(budget)}\n          onChange={e => setBudget(parseMoney(e.target.value))}\n          className=\"text-info\"\n        />\n        {budget ? <IncomeList incomes={incomes} /> : null}\n        {budget ? <ExpenseList expenses={expenses} /> : null}\n        {budget\n          ? Action.case({\n              Iddle: () => (\n                <ButtonGroup className=\"d-flex\">\n                  <Button\n                    onClick={openIncomeNewEntry}\n                    variant=\"light\"\n                    className=\"rounded-0\"\n                  >\n                    <Icon icon={withPlus} className=\"text-success\" />\n                  </Button>\n                  <Button\n                    onClick={openExpenseNewEntry}\n                    variant=\"light\"\n                    className=\"rounded-0\"\n                  >\n                    <Icon icon={withMinus} className=\"text-danger\" />\n                  </Button>\n                </ButtonGroup>\n              ),\n              AddExpense: () => (\n                <NewEntry\n                  placeholder=\"NAMA ANGGARAN\"\n                  onSave={handleAddExpense}\n                  onCancel={closeNewEntry}\n                />\n              ),\n              AddIncome: () => (\n                <NewEntry\n                  placeholder=\"SUMBER PEMASUKAN\"\n                  onSave={handleAddIncome}\n                  onCancel={closeNewEntry}\n                />\n              )\n            })(action)\n          : null}\n      </Card.Body>\n      {budget ? <Remaining remaining={calculateRemaining()} /> : null}\n    </Card>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style.css'\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}